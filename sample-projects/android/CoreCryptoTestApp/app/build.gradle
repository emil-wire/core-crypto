plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.mozilla.rust-android-gradle.rust-android'
}

cargo {
    cargoCommand = "cargo make"
    module = "/home/otak/Dev/wire/core/crypto-ffi"
    libname = "core_crypto_ffi"
    targetDirectory = "/home/otak/Dev/wire/core/target"
    targets = ['arm', 'arm64', 'x86_64', 'x86']
    verbose = true
    prebuiltToolchains = true
}

preBuild.dependsOn('copyLibraries')

tasks.register('copyLibraries') {
    dependsOn('copyLibraries_x86_64')
    dependsOn('copyLibraries_x86')
    dependsOn('copyLibraries_armv8')
    dependsOn('copyLibraries_armv7')
}

tasks.register('copyLibraries_x86', Copy) {
    from '/home/otak/Dev/wire/core/target/i686-linux-android/debug/libcore_crypto_ffi.so'
    into layout.projectDirectory.dir('src/main/jniLibs/x86')
}

tasks.register('copyLibraries_x86_64', Copy) {
    from '/home/otak/Dev/wire/core/target/x86_64-linux-android/debug/libcore_crypto_ffi.so'
    into layout.projectDirectory.dir('src/main/jniLibs/x86_64')
}

tasks.register('copyLibraries_armv8', Copy) {
    from '/home/otak/Dev/wire/core/target/aarch64-linux-android/debug/libcore_crypto_ffi.so'
    into layout.projectDirectory.dir('src/main/jniLibs/arm64-v8a')
}

tasks.register('copyLibraries_armv7', Copy) {
    from '/home/otak/Dev/wire/core/target/armv7a-linux-androideabi/debug/libcore_crypto_ffi.so'
    into layout.projectDirectory.dir('src/main/jniLibs/armeabi-v7a')
}

android {
    buildToolsVersion '32.1.0-rc1'
    ndkVersion '22.1.7171670'
    compileSdk 32

    defaultConfig {
        applicationId "com.wire.corecryptotestapp"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'x86_64', 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'net.java.dev.jna:jna:5.10.0@aar'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

//tasks.whenTaskAdded { task ->
//    if ((task.name == 'javaPreCompileDebug' || task.name == 'javaPreCompileRelease')) {
//        task.dependsOn 'cargoBuild'
//    }
//}
