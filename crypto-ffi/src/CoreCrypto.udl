[Wrapped]
typedef string ConversationId;

[Wrapped]
typedef string UserId;

[Error]
enum CryptoError {
    "ConversationNotFound",
    "MalformedIdentifier",
    "KeyStoreError",
    "MlsError",
    "UuidError",
    "Utf8Error",
    "Other"
};

dictionary ConversationCreationMessage {
    sequence<u8> message;
    sequence<u8> welcome;
};

dictionary ConversationConfiguration {
    UserId author;
    sequence<UserId> extra_members;
    sequence<UserId> admins;
    string? ciphersuite;
    duration? key_rotation_span;
};

// interface MlsCentral {
//     [Throws=CryptoError, Name=try_new]
//     constructor(string path, string key);
//
//     [Throws=CryptoError]
//     MlsConversationCreationMessage? new_conversation(ConversationId conversation_id, MlsConversationConfiguration config);
//
//     [Throws=CryptoError]
//     buffer decrypt_message(ConversationId conversation_id, buffer payload);
//
//     [Throws=CryptoError]
//     buffer encrypt_message(ConversationId conversation_id, buffer message);
// };

namespace CoreCrypto {

};
